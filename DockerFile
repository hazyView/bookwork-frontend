# BookWork Frontend Production Docker Image
# Production-ready SvelteKit application with Node.js adapter
FROM node:20-alpine AS builder

WORKDIR /app

# Copy dependency files and install all dependencies (dev needed for build)
COPY package.json package-lock.json ./
RUN npm ci

# Copy the rest of the source code
COPY . .

# Set environment variables for build
ENV NODE_ENV=production
ENV VITE_ENABLE_MOCK_DATA=false
ENV VITE_ENABLE_DEBUG_MODE=false
ENV VITE_ENABLE_ANALYTICS=true

# Build arguments (can be overridden at build time)
ARG VITE_API_BASE=https://api.bookwork.com/api
ARG VITE_API_TIMEOUT=30000

# Set build environment variables
ENV VITE_API_BASE=$VITE_API_BASE
ENV VITE_API_TIMEOUT=$VITE_API_TIMEOUT

# Build the SvelteKit app for production using adapter-node
RUN npm run build

# Stage 2: Create the final, minimal production image
FROM node:20-alpine

WORKDIR /app

# Install dumb-init for proper signal handling
RUN apk add --no-cache dumb-init

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs
RUN adduser -S sveltekit -u 1001

# Copy built application and production dependencies
COPY --from=builder --chown=sveltekit:nodejs /app/build ./build
COPY --from=builder --chown=sveltekit:nodejs /app/package.json ./package.json
COPY --from=builder --chown=sveltekit:nodejs /app/package-lock.json ./package-lock.json

# Install only production dependencies in final image
RUN npm ci --only=production && npm cache clean --force

# Switch to non-root user
USER sveltekit

# Expose the port the app runs on
EXPOSE 3000

# Environment variable for the Node server
ENV NODE_ENV=production
ENV PORT=3000
ENV VITE_ENABLE_MOCK_DATA=false

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]

# Command to start the application using adapter-node
CMD ["node", "build"]